
All the people reporting problems and fixes or additions. More specifically in
alphabetical order by last name.

###############################################################################
 # * # * # * # * # * # * # * # * # * # * # * # * # * # * # * # * # * # * # * #
###############################################################################

David Cantrell (DrHyde on perlmonks.org)
  For reporting on MCE hanging with cpan -t MCE under his environment. Also,
  thank you for providing me a guest account. I was able to reproduce the
  issue. Added writeable check and croak if tmp dir is not writeable.
  One cannot assume that /dev/shm is writeable by everyone. :)

Eric Collet
  For the inspiration to many-core the tre-agrep binary.
  * I first learned of tre-agrep from Eric. He emailed me running times for
    a couple scenarios utilizing a single core. Thus increasing the need to
    have a MCE-driven wrapper script to run tre-agrep.
  * The bin/mce_grep script was created to show folks how one could go about
    about chunking data between Perl and an external C binary in an efficient
    manner without invoking the shell. The script supports grep, egrep, fgrep,
    agrep and tre-agrep.

Oliver Gorwits
  For reporting on a couple issues with MCE along with a solution for each.
  * Pointed me in the right direction for improving the logic for the die
    handler. Basically, eval { die 'this should not cause MCE to die' };
  * Changed INIT { ... } to sub import { ... } inside MCE.pm.

Shawn Halpenny
  For reporting an issue (bug RT#94706) with signal handling in MCE::Signal.
  Also, thank you for tip on getpgrp().

Dana Jacobsen
  For reporting an issue with get_ncpu on AIX. In addition, suggesting
  various solutions.

Philip Mabon
  For reporting on a couple issues with MCE in particular bug RT#92627.

David Mertens
  * I am thankful for the tip on making PDL + MCE a possiblity. Workers were
    crashing during exiting. Adding "sub PDL::CLONE_SKIP { 1 }" inside MCE.pm
    solved this issue entirely.
  * In addition, for pointers on how to effectively use PDL from his example
    matmult_pdl_thr.pl utilizing PDL::Parallel::threads::SIMD at
    https://gist.github.com/run4flat/4942132.

Joseph Ogulin
  For providing me the initial perl-MCE.spec file.

Adam SjÃ¸gren
  For reporting on running /usr/bin/time mce_script.pl and pressing Ctrl-C
  failing. The default behaviour in MCE::Signal is to call setpgrp. MCE 1.403
  adds a new option to MCE::Signal to not call setpgrp. This also gives the
  developer finer control as to where setpgrp should be called, if ever needed,
  such as in the child process and not the manager process.
  
    use MCE::Signal qw(-no_setpgrp);
    use MCE;

Marcus Smith
  For reporting a problem with MCE including a sample script demonstrating
  MCE not 100% UTF-8 safe. All this time, totally overlooked the fact that
  the length function deals in logical characters, not physical bytes. :)

Jeffrey Ryan Thalhammer
  For submitting a feature request on support for lazy arrays.
  * Although a lazy array cannot be used directly for input_data, support for
    iterator objects was added to MCE 1.505; e.g. input_data => $iterator_ref;
    This enabled support for lazy arrays using closures.
  * I am thankful for the small code snippet highlighting a use-case of MCE.
    I would have failed initially without it. Your example was placed under
    the "SYNTAX for INPUT_DATA" section in MCE::Core for others to see on
    how to process output from Path::Iterator::Rule in parallel.

###############################################################################
 # * # * # * # * # * # * # * # * # * # * # * # * # * # * # * # * # * # * # * #
###############################################################################

Thank you.

Regards,
Mario

